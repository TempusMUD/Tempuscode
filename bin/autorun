#!/bin/bash
#
# CircleMUD 2.0 autorun script
# Originally by Fred C. Merkel
# Copyright (c) 1993 The Trustees of The Johns Hopkins University
# All Rights Reserved
# See license.doc for more information

# converted to bash by John Watson, June 22 1999.

# If .killscript exists, the script will commit suicide (and remove
# .killscript).  If pause exists, the script will sleep and will not
# restart the mud until pause is removed.

udate() {
    date -u +"%Y-%m-%dT%H%M%SZ"
}

FLAGS='-P -p 2020'

if [ "x$1" != "x" ]; then
    cd "$1"
fi

rm -f .killscript

while [ ! -e .killscript ]; do

    rm -f pause

    DATE=`udate`

    echo "autoscript starting game $DATE" >> syslog

    bin/circle $FLAGS lib > syslog 2>&1 &
    PID=$!
    echo $PID >/var/run/tempus.pid

    wait $PID                   # Wait for tempus to finish running
    RESULT=$?

    rm /var/run/tempus.pid

	tar -jcf bak/players.tar.bz2 lib/players &

    fgrep "has deleted c"   syslog >> log/parsed/delete
    fgrep "death trap"      syslog >> log/parsed/dts
    fgrep "killed"          syslog >> log/parsed/rip
    fgrep "Running"         syslog >> log/parsed/restarts
    fgrep "advanced"        syslog >> log/parsed/levels
    fgrep "equipment lost"  syslog >> log/parsed/rentgone
    fgrep "usage"           syslog >> log/parsed/usage
    fgrep "new character"   syslog >> log/parsed/newchar
    fgrep "new account:"    syslog >> log/parsed/newplayers
    fgrep "SYSERR"          syslog >> log/parsed/errors
    fgrep "DEBUG"           syslog >> log/parsed/debug
    fgrep "(GC)"            syslog >> log/parsed/godcmds
    fgrep "(QC)"            syslog >> log/parsed/questcmds
    fgrep "PASSWORD:"       syslog >> log/parsed/badpws
    fgrep "undefined rent"  syslog >> log/parsed/undef_rent
    fgrep "rename"          syslog >> log/parsed/eq_renames
    fgrep "been restored"   syslog >> log/parsed/restores
    fgrep "ENCHANT"         syslog >> log/parsed/imm_enchants
    fgrep " Killed"         syslog >> log/parsed/exp_log
    fgrep "Failed a"        syslog >> log/parsed/failed_olc
    fgrep "OLC"             syslog >> log/parsed/olc_log
    fgrep "register"        syslog >> log/parsed/home_register
    fgrep "pkilled"         syslog >> log/parsed/pkills
    fgrep "stole"           syslog >> log/parsed/larceny
    fgrep "ImmCast"         syslog >> log/parsed/imm_magic
    fgrep "approved object" syslog >> log/parsed/olc_obj_approve
    fgrep "approved mobile" syslog >> log/parsed/olc_mob_approve
    fgrep "has gained"      syslog >> log/parsed/no_hunger_t_d
    fgrep "(RTEST)"         syslog >> log/parsed/remorts
    fgrep "jail"            syslog >> log/parsed/jail_log
    fgrep "looted"          syslog >> log/parsed/corpse_looting
    fgrep "MONEY"           syslog >> log/parsed/cash_transfer
    fgrep "CLAN:"           syslog >> log/parsed/clan_accounts
    fgrep "SRCH:"           syslog >> log/parsed/searches
    fgrep "(cedit)"         syslog >> log/parsed/cedit_log
    fgrep "increased"       syslog >> log/parsed/increase_log
    fgrep "improved"        syslog >> log/parsed/improve_log
    fgrep "siteok'd"        syslog >> log/parsed/siteok_log
    fgrep "soulless"        syslog >> log/parsed/soulless

    mv syslog log/$DATE-system.log
    mv lib/log/command.log log/$DATE-commands.log

    #
    # if the core is newer than the core touch file, send a report
    #

    if [ $RESULT -gt "128" ]; then
        # We died as a result of a signal here: this pretty much means
        # a segfault
        if [ ! -x ./bin/crash_report.sh ]; then
            echo "A crash was detected but the crash report permissions were wrong." | mail -s "TempusMUD CRASH REPORT" dlowe
        elif [ ! -e ./lib/core ]; then
            echo "A crash was detected but no core file was made." | mail -s "TempusMUD CRASH REPORT" dlowe
        else
            ./bin/crash_report.sh lib/core log/$DATE-system.log >log/$DATE-crashreport.txt
            mv lib/core log/$DATE-core
            cat log/$DATE-crashreport.txt | mail -s "TempusMUD CRASH REPORT" dlowe
        fi

        # Check to see if the mud ever actually started.  If the mud
        # never came up, we have a crash loop and need to stop the mud
        # until someone comes and rescues it
        if ! fgrep "Entering game loop" log/$DATE-system.log; then
            touch pause
        fi
    elif [ -e .killscript ]; then
        # Peaceful process death - permadeath
        echo "autoscript killed" `udate` >> syslog
        rm .killscript
        exit
    else
        # Peaceful process death - a reboot is desired
        echo "Reboot requested." | mail -s "TempusMUD Reboot Notification" dlowe
    fi

    sleep 5

    while [ -r pause ]; do
        # Pause while the pause file still exists
        sleep 5
    done
done

echo "autoscript ending" `udate` >> syslog
